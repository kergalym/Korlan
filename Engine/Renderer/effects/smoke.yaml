# Particles effect
# Adapted from https://thebookofshaders.com

vertex:
    transform: |

fragment:
    inout: |
        in vec3 colorA;
        in vec3 colorB;

    includes: |
        #pragma include "Engine/Shaders/particles_func.inc.glsl"

    defines: |
        #define DONT_FETCH_DEFAULT_TEXTURES 0
        #define DONT_SET_MATERIAL_PROPERTIES 1

    material: |
        vec2 uv = vOutput.texcoord.xy;

        vec3 color = vec3(0.0);

        vec3 pct = vec3(uv.x);

        // pct.r = smoothstep(0.0,1.0, uv.x);
        // pct.g = sin(st.x*PI);
        // pct.b = pow(st.x,0.5);

        color = mix(colorA, colorB, pct);

        // Plot transition lines for each channel
        color = mix(color,vec3(1.0,0.0,0.0),plot(uv, pct.r));
        color = mix(color,vec3(0.0,1.0,0.0),plot(uv, pct.g));
        color = mix(color,vec3(0.0,0.0,1.0),plot(uv, pct.b));

        // define material properties
        m.basecolor = color;
        m.shading_model = 3; // transparency 3
        m.specular_ior = 0.0;
        m.metallic = 0.0;
        m.roughness = 0.0;
        m.shading_model_param0 = 0.1;
        m.normal = vOutput.normal;